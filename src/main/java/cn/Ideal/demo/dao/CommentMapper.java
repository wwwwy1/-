package cn.Ideal.demo.dao;


import cn.Ideal.demo.entity.Comment;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @Delete({
        "delete from comment",
        "where Cid = #{cid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer cid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @Insert({
        "insert into comment (Cid,uid, title, ",
        "content, tips, Ctime, Cimg, ",
        "count)",
        "values (#{cid,jdbcType=INTEGER},#{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{tips,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, ",
        "#{cimg,jdbcType=VARCHAR},#{count,jdbcType=INTEGER})"
    })
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @InsertProvider(type=CommentSqlProvider.class, method="insertSelective")
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @Select({
            "select",
            "Cid, cimg, title, content, tips, Ctime, count, uid",
            "from comment",
            "where Cid = #{cid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="cimg", property="cimg", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
            @Result(column="tips", property="tips", jdbcType=JdbcType.VARCHAR),
            @Result(column="Ctime", property="ctime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="count", property="count", jdbcType=JdbcType.INTEGER),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
            @Result(column ="uid",property = "user",one = @One(select = "cn.Ideal.demo.dao.UserMapper.selectByPrimaryKey"))
    })
    Comment selectByPrimaryKey(Integer cid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Tue Apr 09 19:52:55 GMT+08:00 2019
     */
    @Update({
        "update comment",
        "set title = #{title,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "tips = #{tips,jdbcType=VARCHAR},",
          "Ctime = #{ctime,jdbcType=VARCHAR},",
          "count = #{count,jdbcType=INTEGER}",
        "where Cid = #{cid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Comment record);

    @Update({
            "update comment",
            "set count = count+1",
            "where Cid = #{cid,jdbcType=INTEGER}"
    })
    int updateCount(Integer cid);
    @Select({
            "select",
            "Cid, cimg, title, content, tips, Ctime, count, uid",
            "from comment"
    })
    @Results({
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="cimg", property="cimg", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
            @Result(column="tips", property="tips", jdbcType=JdbcType.VARCHAR),
            @Result(column="Ctime", property="ctime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="count", property="count", jdbcType=JdbcType.INTEGER),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER)
    })
    List<Comment> selectAll();

    @Select({
            "select",
            "Cid, cimg, title, content, tips, Ctime, count, uid",
            "from comment order by count desc"
    })
    @Results({
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="cimg", property="cimg", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
            @Result(column="tips", property="tips", jdbcType=JdbcType.VARCHAR),
            @Result(column="Ctime", property="ctime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="count", property="count", jdbcType=JdbcType.INTEGER),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER)
    })
    List<Comment> selectHot();


    @Select({
            "select",
            "Cid, cimg, title, content, tips, Ctime, count, uid",
            "from comment ",
            "where title like CONCAT('%',#{keyWords,jdbcType=VARCHAR},'%') or content like CONCAT('%',#{keyWords,jdbcType=VARCHAR},'%')",
            " or tips like CONCAT('%',#{keyWords,jdbcType=VARCHAR},'%')"
    })
    @Results({
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="cimg", property="cimg", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
            @Result(column="tips", property="tips", jdbcType=JdbcType.VARCHAR),
            @Result(column="Ctime", property="ctime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="count", property="count", jdbcType=JdbcType.INTEGER),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER)
    })
    List<Comment> selectKeywords(String keywords);
}