package cn.Ideal.demo.dao;

import cn.Ideal.demo.entity.Reply;
import cn.Ideal.demo.entity.Replyvip;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface ReplyvipMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @Delete({
        "delete from replyVip",
        "where Rid = #{rid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer rid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @Insert({
        "insert into replyVip (Rid, Cid, ",
        "Ridrp, uid, dtime, ",
        "father, ruid)",
        "values (#{rid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, ",
        "#{ridrp,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{dtime,jdbcType=TIMESTAMP}, ",
        "#{father,jdbcType=INTEGER}, #{ruid,jdbcType=INTEGER})"
    })
    int insert(Replyvip record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @InsertProvider(type=ReplyvipSqlProvider.class, method="insertSelective")
    int insertSelective(Replyvip record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @Select({
            "select",
            "Rid, Cid, Ridrp, uid, dtime, father",
            "from replyVip",
            "where Rid = #{rid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="Rid", property="rid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="Ridrp", property="ridrp", jdbcType=JdbcType.VARCHAR),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
            @Result(column="dtime", property="dtime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="father", property="father", jdbcType=JdbcType.INTEGER),
            @Result(column ="uid",property = "user",one = @One(select = "cn.Ideal.demo.dao.UserMapper.selectByPrimaryKey")),
            @Result(column ="Rid",property = "rn",one = @One(select = "cn.Ideal.demo.dao.ReplyvipMapper.selectRn"))
    })
    Replyvip selectByPrimaryKey(Integer rid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @UpdateProvider(type=ReplyvipSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Replyvip record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table replyVip
     *
     * @mbggenerated Sat Apr 20 19:02:01 GMT+08:00 2019
     */
    @Update({
        "update replyVip",
        "set Cid = #{cid,jdbcType=INTEGER},",
          "Ridrp = #{ridrp,jdbcType=VARCHAR},",
          "uid = #{uid,jdbcType=INTEGER},",
          "dtime = #{dtime,jdbcType=TIMESTAMP},",
          "father = #{father,jdbcType=INTEGER},",
          "ruid = #{ruid,jdbcType=INTEGER}",
        "where Rid = #{rid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Replyvip record);



    @Select({
            "select",
            "count(*) rn",
            "from replyVip",
            "where father = #{rid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="rn", property="rn", jdbcType=JdbcType.INTEGER)
    })
    Integer selectRn(@Param("rid") Integer rid);
    @Select({
            "select",
            "Rid, Cid, Ridrp, uid, dtime, father",
            "from replyVip",
            "where Cid = #{cid,jdbcType=INTEGER} and father=#{father,jdbcType=INTEGER} order by dtime asc"
    })
    @Results({
            @Result(column="Rid", property="rid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="Ridrp", property="ridrp", jdbcType=JdbcType.VARCHAR),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
            @Result(column="dtime", property="dtime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="father", property="father", jdbcType=JdbcType.INTEGER),
            @Result(column ="uid",property = "user",one = @One(select = "cn.Ideal.demo.dao.UserMapper.selectByPrimaryKey")),
            @Result(column ="Rid",property = "rn",one = @One(select = "cn.Ideal.demo.dao.ReplyvipMapper.selectRn"))


    })
    List<Replyvip> selectReply1(@Param("cid") Integer cid, @Param("father") Integer father);
    @Select({
            "select",
            "Rid, Cid, Ridrp, uid, dtime, father,ruid",
            "from replyVip",
            "where father=#{father,jdbcType=INTEGER} order by dtime asc"
    })
    @Results({
            @Result(column="Rid", property="rid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="Cid", property="cid", jdbcType=JdbcType.INTEGER),
            @Result(column="Ridrp", property="ridrp", jdbcType=JdbcType.VARCHAR),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER),
            @Result(column="dtime", property="dtime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="father", property="father", jdbcType=JdbcType.INTEGER),
            @Result(column ="uid",property = "user",one = @One(select = "cn.Ideal.demo.dao.UserMapper.selectByPrimaryKey")),
            @Result(column ="ruid",property = "ruser",one = @One(select = "cn.Ideal.demo.dao.UserMapper.selectByPrimaryKey"))
    })
    List<Replyvip> selectReply(@Param("father") Integer father);
}