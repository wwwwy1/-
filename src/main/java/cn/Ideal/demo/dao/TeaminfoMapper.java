package cn.Ideal.demo.dao;

import cn.Ideal.demo.entity.Teaminfo;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

@Component
public interface TeaminfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @Delete({
        "delete from teaminfo",
        "where tid = #{tid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer tid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @Insert({
        "insert into teaminfo (tid, tname, ",
        "tnum, tprice, thy, ",
        "tleader, tphone, ",
        "tcard, tlogo, uid)",
        "values (#{tid,jdbcType=INTEGER}, #{tname,jdbcType=VARCHAR}, ",
        "#{tnum,jdbcType=INTEGER}, #{tprice,jdbcType=DECIMAL}, #{thy,jdbcType=VARCHAR}, ",
        "#{tleader,jdbcType=VARCHAR}, #{tphone,jdbcType=VARCHAR}, ",
        "#{tcard,jdbcType=VARCHAR}, #{tlogo,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER})"
    })
    int insert(Teaminfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @InsertProvider(type=TeaminfoSqlProvider.class, method="insertSelective")
    int insertSelective(Teaminfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @Select({
        "select",
        "tid, tname, tnum, tprice, thy, tleader, tphone, tcard, tlogo, uid",
        "from teaminfo",
        "where tid = #{tid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="tid", property="tid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="tname", property="tname", jdbcType=JdbcType.VARCHAR),
        @Result(column="tnum", property="tnum", jdbcType=JdbcType.INTEGER),
        @Result(column="tprice", property="tprice", jdbcType=JdbcType.DECIMAL),
        @Result(column="thy", property="thy", jdbcType=JdbcType.VARCHAR),
        @Result(column="tleader", property="tleader", jdbcType=JdbcType.VARCHAR),
        @Result(column="tphone", property="tphone", jdbcType=JdbcType.VARCHAR),
        @Result(column="tcard", property="tcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="tlogo", property="tlogo", jdbcType=JdbcType.VARCHAR),
        @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER)
    })
    Teaminfo selectByPrimaryKey(Integer tid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @UpdateProvider(type=TeaminfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Teaminfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teaminfo
     *
     * @mbggenerated Wed Apr 24 23:35:16 GMT+08:00 2019
     */
    @Update({
        "update teaminfo",
        "set tname = #{tname,jdbcType=VARCHAR},",
          "tnum = #{tnum,jdbcType=INTEGER},",
          "tprice = #{tprice,jdbcType=DECIMAL},",
          "thy = #{thy,jdbcType=VARCHAR},",
          "tleader = #{tleader,jdbcType=VARCHAR},",
          "tphone = #{tphone,jdbcType=VARCHAR},",
          "tcard = #{tcard,jdbcType=VARCHAR},",
          "tlogo = #{tlogo,jdbcType=VARCHAR},",
          "uid = #{uid,jdbcType=INTEGER}",
        "where tid = #{tid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Teaminfo record);

    @Select({
            "select",
            "tid, tname, tnum, tprice, thy, tleader, tphone, tcard, tlogo, uid",
            "from teaminfo",
            "where uid = #{uid,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="tid", property="tid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="tname", property="tname", jdbcType=JdbcType.VARCHAR),
            @Result(column="tnum", property="tnum", jdbcType=JdbcType.INTEGER),
            @Result(column="tprice", property="tprice", jdbcType=JdbcType.DECIMAL),
            @Result(column="thy", property="thy", jdbcType=JdbcType.VARCHAR),
            @Result(column="tleader", property="tleader", jdbcType=JdbcType.VARCHAR),
            @Result(column="tphone", property="tphone", jdbcType=JdbcType.VARCHAR),
            @Result(column="tcard", property="tcard", jdbcType=JdbcType.VARCHAR),
            @Result(column="tlogo", property="tlogo", jdbcType=JdbcType.VARCHAR),
            @Result(column="uid", property="uid", jdbcType=JdbcType.INTEGER)
    })
    Teaminfo selectUid(Integer uid);

    @Update({
            "update teaminfo",
            "set tname = #{tname,jdbcType=VARCHAR},",
            "tnum = #{tnum,jdbcType=INTEGER},",
            "tprice = #{tprice,jdbcType=DECIMAL},",
            "thy = #{thy,jdbcType=VARCHAR},",
            "tleader = #{tleader,jdbcType=VARCHAR},",
            "tphone = #{tphone,jdbcType=VARCHAR},",
            "tcard = #{tcard,jdbcType=VARCHAR},",
            "tlogo = #{tlogo,jdbcType=VARCHAR},",
            "uid = #{uid,jdbcType=INTEGER}",
            "where uid = #{uid,jdbcType=INTEGER}"
    })
    int updateByUid(Teaminfo record);
    @Update({
            "update teaminfo",
            "set tname = #{tname,jdbcType=VARCHAR},",
            "tnum = #{tnum,jdbcType=INTEGER},",
            "tprice = #{tprice,jdbcType=DECIMAL},",
            "thy = #{thy,jdbcType=VARCHAR},",
            "tleader = #{tleader,jdbcType=VARCHAR},",
            "tphone = #{tphone,jdbcType=VARCHAR},",
            "tcard = #{tcard,jdbcType=VARCHAR},",
            "uid = #{uid,jdbcType=INTEGER}",
            "where uid = #{uid,jdbcType=INTEGER}"
    })
    int updateByUidNotImg(Teaminfo record);


    @Update({
            "update teaminfo",
            "set ",
            "tprice =tprice+#{tprice,jdbcType=DECIMAL}",
            "where uid = #{uid,jdbcType=INTEGER}"
    })
    int updateAddPrice(@Param("uid") Integer uid,@Param("tprice") Float tprice);
}